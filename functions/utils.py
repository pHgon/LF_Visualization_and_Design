roi_espiral = [(7,7),(7,8),(6,7),(6,7),(6,6),(7,6),(8,6),(8,7),(8,8),(8,9),(7,9),(6,9),(5,9),(5,8),(5,7),(5,6),(5,5),(6,5),\
                (7,5),(8,5),(9,5),(9,6),(9,7),(9,8),(9,9),(9,10),(8,10),(7,10),(6,10),(5,10),(4,10),(4,9),(4,8),(7,7),(4,6),(4,5),\
                (4,4),(5,4),(6,4),(7,4),(8,4),(9,4),(10,4),(10,5),(10,6),(10,7),(10,8),(10,9),(10,10),(10,11),(9,11),(8,11),(7,11),(6,11),\
                (5,11),(4,11),(3,11),(3,10),(3,9),(3,8),(3,7),(3,6),(3,5),(3,4),(3,3),(4,3),(5,3),(6,3),(7,3),(8,3),(9,3),(10,3),\
                (11,3),(11,4),(11,5),(11,6),(11,7),(11,8),(11,9),(11,10),(11,11)]

# Verifica se a SAI atual possui vizinhos validos
def isValidSAI(x, y):
    if x == 0 or x == 14:
       return False
    if y == 0 or y == 14:
        return False
    if y == 1 or y == 13:
        if x < 4 or x > 10:
            return False
    if x == 1 or x == 13:
        if y < 3 or y > 11:
            return False
    return True


